/*
  Global Styles
  ------------
  Colour variables allow for easy theming.  A dark colour scheme is
  provided by default and a light scheme is enabled when the
  `.light` class is applied to the body element (see script.js).  The
  design uses Poppins typography and generous whitespace to create a
  modern look and feel reminiscent of the provided reference site.
*/
:root {
  --bg-color: #0e1220;
  --panel-color: #14183a;
  --text-color: #f3f4f6;
  --subtext-color: #9ca3af;
  --accent: #6366f1; /* indigo-500 */
  --accent-light: #818cf8;
  --container-max: 1100px;
  --border-radius: 8px;
}

/* Light theme overrides */
body.light {
  --bg-color: #f5f7fa;
  --panel-color: #ffffff;
  --text-color: #1f2937;
  --subtext-color: #4b5563;
  --accent: #6366f1;
  --accent-light: #818cf8;
}

body {
  margin: 0;
  padding: 0;
  font-family: 'Poppins', sans-serif;
  background-color: var(--bg-color);
  color: var(--text-color);
  line-height: 1.6;
  scroll-behavior: smooth;
  transition: background-color 0.3s ease, color 0.3s ease;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
}

a {
  color: var(--accent);
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

.container {
  width: 100%;
  max-width: var(--container-max);
  margin: 0 auto;
  padding: 0 1.5rem;
}

/* Header */
header {
  position: fixed;
  top: 0;
  width: 100%;
  background: rgba(14, 18, 32, 0.75);
  backdrop-filter: blur(10px);
  z-index: 1000;
  border-bottom: 1px solid rgba(255,255,255,0.05);
  transition: background 0.3s ease;
}

body.light header {
  background: rgba(255, 255, 255, 0.85);
  border-bottom: 1px solid rgba(0,0,0,0.05);
}

header .container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 64px;
}

.logo a {
  font-weight: 700;
  font-size: 1.5rem;
  letter-spacing: 0.5px;
  color: var(--text-color);
}

nav {
  display: flex;
  align-items: center;
}

.nav-list {
  display: flex;
  list-style: none;
  gap: 1.5rem;
  margin: 0;
  padding: 0;
}

.nav-list li a {
  color: var(--text-color);
  font-weight: 500;
  transition: color 0.2s ease;
}

.nav-list li a:hover {
  color: var(--accent);
}

.nav-toggle {
  display: none;
  background: none;
  border: none;
  font-size: 1.5rem;
  color: var(--text-color);
  cursor: pointer;
}

#theme-toggle {
  background: none;
  border: none;
  margin-left: 1rem;
  color: var(--text-color);
  font-size: 1.25rem;
  cursor: pointer;
  transition: color 0.3s ease;
}

#theme-toggle:hover {
  color: var(--accent);
}

/* Hero */
#hero {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding-top: 80px;
  background: radial-gradient(circle at top left, #1a237e, #0d1334);
  position: relative;
}

.hero-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 3rem;
  flex-wrap: wrap;
}

.hero-text {
  flex: 1 1 360px;
  max-width: 540px;
}

.hero-text .greeting {
  font-size: 1rem;
  color: var(--accent);
  margin: 0 0 0.25rem;
}

.hero-text h1 {
  font-size: 3rem;
  margin: 0;
  font-weight: 700;
}

.hero-text h2 {
  font-size: 1.75rem;
  font-weight: 500;
  color: var(--subtext-color);
  margin: 0.5rem 0 1rem;
}

.hero-text .summary {
  max-width: 500px;
  color: var(--subtext-color);
  margin-bottom: 1.5rem;
}

.hero-buttons {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}

.btn {
  display: inline-block;
  padding: 0.8rem 1.5rem;
  border-radius: 30px;
  font-weight: 600;
  font-size: 0.95rem;
  color: var(--bg-color);
  background: var(--accent);
  border: 2px solid var(--accent);
  transition: background 0.3s ease, color 0.3s ease;
}

.btn:hover {
  background: var(--accent-light);
  color: var(--bg-color);
}

.btn.btn-secondary {
  background: transparent;
  color: var(--accent);
}

.btn.btn-secondary:hover {
  background: var(--accent);
  color: var(--bg-color);
}

.social-icons {
  margin-top: 1rem;
}

.social-icons a {
  color: var(--subtext-color);
  font-size: 1.4rem;
  margin-right: 1rem;
  transition: color 0.3s ease;
}

.social-icons a:hover {
  color: var(--accent);
}

.hero-image {
  flex: 1 1 360px;
  text-align: center;
  /* Enable 3D perspective on the hero illustration */
  perspective: 1200px;
}

/* Give the hero illustration a subtle 3D tilt on hover */
.hero-image img {
  border-radius: var(--border-radius);
  transition: transform 0.6s ease;
  transform-style: preserve-3d;
}

.hero-image:hover img {
  transform: rotateY(12deg) rotateX(-8deg) scale(1.05);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5);
}

.scroll-indicator {
  position: absolute;
  bottom: 1.5rem;
  left: 50%;
  transform: translateX(-50%);
}

.scroll-indicator a {
  color: var(--accent);
  font-size: 1.5rem;
  animation: bounce 2s infinite;
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateX(-50%) translateY(0);
  }
  40% {
    transform: translateX(-50%) translateY(-8px);
  }
  60% {
    transform: translateX(-50%) translateY(-4px);
  }
}

/* Sections */
section {
  padding: 5rem 0;
}

#about .about-container {
  display: flex;
  align-items: center;
  gap: 3rem;
  flex-wrap: wrap;
}

#about .about-text {
  flex: 1 1 360px;
  min-width: 300px;
}

#about .about-image {
  flex: 1 1 360px;
  min-width: 300px;
}

#about .about-image img {
  border-radius: var(--border-radius);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5);
}

#about p {
  color: var(--subtext-color);
}

/* Skills */
/* 3D Keyboard styling for the skills section */
#skills {
  position: relative;
  background: transparent;
  padding-top: 4rem;
}

#skills h2 {
  text-align: center;
}

/* The container that holds the keys is rotated to create an isometric perspective */
#skills .skills-grid {
  margin-top: 3rem;
  /* Arrange keys in a fixed grid so they remain aligned when rotated */
  display: grid;
  grid-template-columns: repeat(6, 80px);
  grid-auto-rows: 80px;
  gap: 0.5rem;
  width: fit-content;
  margin-left: auto;
  margin-right: auto;
  /* Tilt the keyboard for an isometric effect similar to the reference image */
  transform: rotateX(55deg) rotateZ(-30deg);
  transform-style: preserve-3d;
  perspective: 800px;
  transform-origin: top;
}

@keyframes rotateKeyboard {
  0% {
    transform: rotateX(55deg) rotateZ(-30deg);
  }
  100% {
    transform: rotateX(55deg) rotateZ(330deg);
  }
}

/* Individual keys mimic keyboard keycaps with depth and shading */
.skill-item {
  position: relative;
  width: 80px;
  height: 80px;
  margin: 0.4rem;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 8px;
  transform-style: preserve-3d;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  cursor: pointer;
  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.6);
}

/* Hide the text label on the keycap; the title attribute still provides a tooltip */
.skill-item span {
  display: block;
  position: relative;
  z-index: 2;
  color: #ffffff;
  font-weight: 600;
  font-size: 0.75rem;
  line-height: 1;
  text-align: center;
  pointer-events: none;
  /* Counter-rotate the label so it faces the viewer */
  transform: rotateX(-55deg) rotateZ(30deg) translateZ(20px);
}

.skill-item i {
  display: none;
}

/* Pressed state used to animate the key downwards when hovered */
.skill-item.pressed {
  transform: translateZ(-12px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}

/* Highlighted key during automatic animation */
.skill-item.active {
  /* Make the key appear brighter and slightly elevated */
  filter: brightness(1.35);
  box-shadow: 0 16px 24px rgba(255, 255, 255, 0.35), 0 8px 16px rgba(0, 0, 0, 0.6);
  transform: translateZ(8px);
}

/* Assign different colours to keys in a repeating sequence */
.skill-item:nth-child(6n+1) { background-color: #3498db; }
.skill-item:nth-child(6n+2) { background-color: #27ae60; }
.skill-item:nth-child(6n+3) { background-color: #e67e22; }
.skill-item:nth-child(6n+4) { background-color: #9b59b6; }
.skill-item:nth-child(6n+5) { background-color: #e74c3c; }
.skill-item:nth-child(6n+6) { background-color: #1abc9c; }

/* Experience */
#experience h2 {
  text-align: center;
}

.timeline {
  position: relative;
  margin-top: 2.5rem;
  padding-left: 2rem;
}

/* ------------------------------------------------------------------ */
/* 3D Keyboard Styles (Skills Section)
   The skills section is rendered as an isometric keyboard.  Each key
   is a coloured tile with a gradient that simulates light striking
   different faces of a keycap.  A dark board base provides contrast
   and depth, and the entire assembly is rotated in 3D to mirror the
   reference keyboard image provided by the user. */

/* Wrapper around the skill display and the keyboard.  Using flex
   layout allows the label area to sit alongside the board on
   large screens and stack vertically on smaller devices. */
#skills .keyboard-wrapper {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: flex-start;
  gap: 2rem;
  margin-top: 3rem;
  perspective: 1200px;
}

/* The textual display that shows the name and tagline of the
   currently hovered skill. */
#skills .skill-display {
  flex: 0 0 auto;
  max-width: 200px;
  color: var(--accent);
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  /* Display the skill name and tagline vertically along the
     side of the keyboard.  The writing-mode and rotation
     properties orient the text in a top-to-bottom flow similar
     to the reference animation. */
  writing-mode: vertical-rl;
  transform: rotate(180deg);
  text-align: left;
}

#skills .skill-display h3 {
  margin: 0;
  font-size: 2rem;
  font-weight: 600;
  color: var(--text-color);
  letter-spacing: 0.05em;
}

#skills .skill-display p {
  margin: 0.5rem 0 0;
  font-size: 0.9rem;
  color: var(--subtext-color);
}

/* Responsive behaviour: on smaller screens the display stacks above
   the board and centres its text. */
@media (max-width: 768px) {
  #skills .keyboard-wrapper {
    flex-direction: column;
    align-items: center;
  }
  #skills .skill-display {
    align-items: center;
    text-align: center;
    order: -1;
  }
}

/* The dark base underneath the keys.  Padding creates space around
   the keys and a box‑shadow lifts the board off the background. */
#skills .board-base {
  position: relative;
  display: inline-block;
  padding: 1.5rem;
  background: #111827;
  border-radius: 24px;
  box-shadow: 0 25px 35px rgba(0, 0, 0, 0.7);
  /* Tilt the board into a pseudo‑isometric view.  Slightly reduce the
     rotation to avoid excessive stretching across the screen. */
  transform: rotateX(45deg) rotateZ(-30deg);
  transform-style: preserve-3d;
}

/* Grid layout for the keys.  The grid wraps automatically based
   on available width, ensuring the keyboard remains centred even
   on smaller screens. */
#skills .keyboard {
  display: grid;
  /* Fix the number of columns to prevent the keys from stretching across
     the entire screen.  Six columns mimics the layout seen in the
     reference image. */
  grid-template-columns: repeat(6, 80px);
  grid-auto-rows: 80px;
  gap: 0.7rem;
  width: fit-content;
  transform-style: preserve-3d;
}

/* Individual keycap.  A linear gradient from --key-color to
   --edge-color simulates a top surface fading into the front edge.
   Box shadows add additional depth.  The transition properties make
   the key pop when hovered or activated. */
#skills .key {
  position: relative;
  width: 80px;
  height: 80px;
  border-radius: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #fff;
  font-size: 2rem;
  cursor: pointer;
  user-select: none;
  background: linear-gradient(145deg, var(--key-color), var(--edge-color));
  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.6);
  transform-style: preserve-3d;
  transition: transform 0.2s ease, box-shadow 0.2s ease, filter 0.2s ease;

  /* Allow pseudo‑elements to extend outside the key's bounding box
     so the 3D extrusion is visible. */
  overflow: visible;
}

/* Counter‑rotate the icon so it faces the viewer even though its
   parent keycap is rotated by the board.  Adding a translation
   along the Z axis lifts the icon so it doesn’t intersect the key
   surface visually. */
#skills .key i {
  /* Icons inherit the transform from their parent keycap.  We do not
     apply additional transforms here to simplify stacking. */
  transform: none;
  position: relative;
  z-index: 2;
  pointer-events: none;
}

/* Create an extruded front face beneath each skill key by adding a
   pseudo‑element that is skewed to simulate perspective.  The
   pseudo‑element uses the --edge-color defined on the element to
   produce a cohesive colour transition. */
#skills .key::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 14px;
  background: var(--edge-color);
  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
  /* Skew the face along the X axis to give the appearance of depth */
  transform: skewX(-45deg);
  transform-origin: top left;
  z-index: -1;
}

/* Pressed state: the key moves downward when the user hovers
   with a slight shadow adjustment to simulate depression. */
#skills .key.pressed {
  transform: translateZ(-8px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}

/* Active state used by the automatic animation: the key lifts and
   brightens to draw attention. */
#skills .key.active {
  filter: brightness(1.4);
  transform: translateZ(16px);
  box-shadow: 0 18px 26px rgba(255, 255, 255, 0.25), 0 8px 16px rgba(0, 0, 0, 0.6);
}

/* On hover, raise the key slightly to indicate interactivity. */
#skills .key:hover {
  transform: translateZ(12px);
  box-shadow: 0 12px 18px rgba(0, 0, 0, 0.75);
}

.timeline::before {
  content: '';
  position: absolute;
  left: 20px;
  top: 0;
  bottom: 0;
  width: 2px;
  background: var(--accent);
}

.timeline-item {
  position: relative;
  margin-bottom: 3rem;
}

.timeline-item:last-child {
  margin-bottom: 0;
}

.timeline-icon {
  position: absolute;
  left: 14px;
  top: 4px;
  width: 12px;
  height: 12px;
  background: var(--accent);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.5rem;
  color: var(--bg-color);
}

.timeline-content {
  margin-left: 2rem;
  background: var(--panel-color);
  border-radius: var(--border-radius);
  padding: 1rem 1.25rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
}

.timeline-content h3 {
  margin-top: 0;
  font-size: 1.2rem;
  color: var(--text-color);
}

.timeline-content h3 span {
  font-weight: 400;
  color: var(--accent);
}

.timeline-date {
  font-size: 0.85rem;
  color: var(--subtext-color);
  margin-bottom: 0.5rem;
  display: block;
}

.timeline-content ul {
  margin: 0;
  padding-left: 1.1rem;
  list-style: disc;
  color: var(--subtext-color);
}

.timeline-content ul li {
  margin-bottom: 0.5rem;
}

/* Projects */
#projects h2 {
  text-align: center;
}

.projects-grid {
  margin-top: 2rem;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 2rem;
  /* Establish a perspective context so each card's 3D transform has depth */
  perspective: 1000px;
}

.project-card {
  background: var(--panel-color);
  border-radius: var(--border-radius);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.4);
  transition: transform 0.4s ease, box-shadow 0.4s ease;
  transform-style: preserve-3d;
}

.project-card:hover {
  /* On hover lift and rotate the card to create a 3D pop effect */
  transform: translateY(-10px) rotateY(10deg) rotateX(-4deg) scale(1.03);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.6);
}

.project-card img {
  width: 100%;
  height: 180px;
  object-fit: cover;
}

.project-content {
  padding: 1rem 1.25rem 1.5rem;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

.project-content h3 {
  margin: 0;
  font-size: 1.25rem;
  color: var(--text-color);
}

.project-content p {
  margin-top: 0.5rem;
  font-size: 0.9rem;
  color: var(--subtext-color);
  flex-grow: 1;
}

.project-tags {
  margin-top: 0.75rem;
}

.project-tags span {
  display: inline-block;
  background: rgba(99, 102, 241, 0.2);
  color: var(--accent);
  padding: 0.3rem 0.6rem;
  border-radius: 4px;
  font-size: 0.75rem;
  margin-right: 0.4rem;
  margin-bottom: 0.4rem;
}

/* Certifications */
#certifications h2 {
  text-align: center;
}

.certifications-list {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1.5rem;
  margin-top: 2rem;
}

.cert-item {
  background: var(--panel-color);
  padding: 1rem 1.25rem;
  border-radius: var(--border-radius);
  display: flex;
  align-items: center;
  gap: 0.8rem;
  min-width: 260px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

.cert-item i {
  font-size: 1.4rem;
  color: var(--accent);
}

.cert-item span {
  font-size: 0.9rem;
  color: var(--text-color);
}

/* Contact */
#contact h2 {
  text-align: center;
}

.contact-container {
  margin-top: 2rem;
  display: flex;
  flex-wrap: wrap;
  gap: 3rem;
}

.contact-info {
  flex: 1 1 300px;
}

.contact-info p {
  margin: 0.5rem 0;
  font-size: 0.95rem;
}

.contact-info i {
  margin-right: 0.6rem;
  color: var(--accent);
}

.contact-info a {
  color: var(--accent);
}

.contact-form {
  flex: 1 1 300px;
}

.contact-form form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.contact-form input,
.contact-form textarea {
  padding: 0.9rem 1rem;
  border-radius: var(--border-radius);
  background: var(--panel-color);
  border: 1px solid rgba(255, 255, 255, 0.1);
  color: var(--text-color);
  font-size: 0.9rem;
  transition: border-color 0.2s ease;
}

.contact-form input:focus,
.contact-form textarea:focus {
  outline: none;
  border-color: var(--accent);
}

.contact-form button {
  align-self: flex-start;
  padding: 0.8rem 1.6rem;
  border-radius: 30px;
  border: none;
  background: var(--accent);
  color: var(--bg-color);
  font-weight: 600;
  cursor: pointer;
  transition: background 0.3s ease;
}

.contact-form button:hover {
  background: var(--accent-light);
}

/* Footer */
footer {
  background: var(--panel-color);
  padding: 2rem 0;
  text-align: center;
  font-size: 0.85rem;
  color: var(--subtext-color);
}

footer .footer-social a {
  color: var(--subtext-color);
  margin: 0 0.5rem;
  font-size: 1.2rem;
  transition: color 0.3s ease;
}

footer .footer-social a:hover {
  color: var(--accent);
}

footer p {
  margin-top: 1rem;
}

/* Fade in animation for scroll‑triggered elements */
section,
.timeline-item,
.project-card,
.skill-item,
.cert-item {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

/*
  Typing Demo Section
  -------------------
  This section showcases a playful typing animation where a
  yellow mascot sits beside a second 3D keyboard.  As the
  section scrolls into view, the keys on this keyboard are
  highlighted in sequence to mimic the character typing.  The
  layout is responsive: on wide screens the mascot and the board
  sit side by side; on smaller devices they stack vertically and
  centre align.
*/
.typing-section {
  padding: 4rem 0;
  /* Use a subtle dark gradient to distinguish this area from the
     surrounding sections while maintaining the overall dark theme. */
  background: radial-gradient(circle at top right, #0d1334, #0a0f28);
}

.typing-section .typing-title {
  text-align: center;
  margin-bottom: 2rem;
  font-size: 2rem;
  font-weight: 600;
  color: var(--text-color);
}

.typing-wrapper {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  gap: 3rem;
  /* Establish a perspective context so the keyboard tilt looks
     realistic. */
  perspective: 1200px;
}

/* Mascot illustration */
.typing-mascot {
  flex: 0 0 auto;
  max-width: 280px;
  width: 40%;
  min-width: 200px;
  /* Add a drop shadow so the mascot pops against the background */
  filter: drop-shadow(0 10px 20px rgba(0, 0, 0, 0.5));
}

/* 3D board container for the typing demo.  Shares many of the
   same properties as the skills keyboard base but defined here
   explicitly so it is not restricted by the #skills selector. */
.typing-board {
  position: relative;
  display: inline-block;
  padding: 1.5rem;
  background: #111827;
  border-radius: 24px;
  box-shadow: 0 25px 35px rgba(0, 0, 0, 0.7);
  transform: rotateX(45deg) rotateZ(-30deg);
  transform-style: preserve-3d;
}

/* Grid layout for the typing keyboard.  Six columns mirrors the
   layout used in the main skills section. */
.typing-board .keyboard {
  display: grid;
  grid-template-columns: repeat(6, 80px);
  grid-auto-rows: 80px;
  gap: 0.7rem;
  width: fit-content;
  transform-style: preserve-3d;
}

/* Individual key in the typing demo.  The gradient and shadow
   values mirror those used for the interactive skills keys but
   without the hover press effect by default. */
.typing-board .key {
  position: relative;
  width: 80px;
  height: 80px;
  border-radius: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #fff;
  font-size: 2rem;
  user-select: none;
  background: linear-gradient(145deg, var(--key-color), var(--edge-color));
  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.6);
  transform-style: preserve-3d;
  transition: transform 0.3s ease, box-shadow 0.3s ease,
    filter 0.3s ease;

  /* Allow the pseudo‑element extrusion to be visible outside the
     key's normal box. */
  overflow: visible;
}

/* Highlighted state for the typing keys.  When active the key
   lifts and brightens, simulating a press. */
.typing-board .key.active {
  filter: brightness(1.4);
  transform: translateZ(16px);
  box-shadow: 0 18px 26px rgba(255, 255, 255, 0.25),
    0 8px 16px rgba(0, 0, 0, 0.6);
}

/* Optional hover state for manual exploration.  No sound is
   associated with these keys. */
.typing-board .key:hover {
  transform: translateZ(12px);
  box-shadow: 0 12px 18px rgba(0, 0, 0, 0.75);
}

/* Extruded front face for typing demo keys */
.typing-board .key::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 14px;
  background: var(--edge-color);
  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
  transform: skewX(-45deg);
  transform-origin: top left;
  z-index: -1;
}

/* Responsive adjustments for the typing section.  Stack the
   mascot and keyboard on small screens and scale the mascot up a
   bit to remain visible. */
@media (max-width: 768px) {
  .typing-wrapper {
    flex-direction: column;
    text-align: center;
  }
  .typing-mascot {
    width: 60%;
  }
}

.in-view {
  opacity: 1;
  transform: none;
}

/* Responsive navigation */
@media (max-width: 768px) {
  .nav-list {
    position: absolute;
    top: 64px;
    right: 0;
    width: 200px;
    background: var(--panel-color);
    flex-direction: column;
    gap: 0;
    overflow: hidden;
    max-height: 0;
    transition: max-height 0.3s ease;
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
    border-bottom-left-radius: var(--border-radius);
    border-bottom-right-radius: var(--border-radius);
  }
  .nav-list.open {
    max-height: 350px;
  }
  .nav-list li {
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
  }
  .nav-list li a {
    padding: 0.75rem 1.25rem;
    display: block;
  }
  .nav-toggle {
    display: block;
  }
  nav {
    align-items: center;
  }
  #theme-toggle {
    margin-left: 0.5rem;
  }
  header .container {
    justify-content: space-between;
  }
  .hero-container {
    flex-direction: column;
    text-align: center;
  }
  .hero-text {
    order: 2;
  }
  .hero-image {
    order: 1;
  }
  #about .about-container {
    flex-direction: column;
    text-align: center;
  }
  #experience .timeline::before {
    left: 6px;
  }
  .timeline-icon {
    left: 0;
  }
  .timeline-content {
    margin-left: 1.5rem;
  }
  .contact-container {
    flex-direction: column;
  }
}